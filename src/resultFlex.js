const fields = require('./fields');

const scoreTable = {
  field: [
    -1,
    -1,
    1,
    2,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  pasture: [
    -1,
    1,
    2,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  grain: [
    -1,
    1,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  vegetable: [
    -1,
    1,
    2,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  sheep: [
    -1,
    1,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  wildBoar: [
    -1,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  cattle: [
    -1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
  ],
  emptyFarmyard: [
    0,
    -1,
    -2,
    -3,
    -4,
    -5,
    -6,
    -7,
    -8,
    -9,
    -10,
    -11,
    -12,
    -13,
    -14,
    -15,
  ],
  fencedStable: [0, 1, 2, 3, 4],
  room木屋: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
  room磚屋: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
  room石屋: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30],
  family: [0, 3, 6, 9, 12, 15],
};

function calculate(props) {
  let score = 0;

  fields.forEach(field => {
    const key = field.key;
    const scoreTableRow = scoreTable[key];
    const resourceCount = props[key];
    if (scoreTableRow && resourceCount) {
      score += scoreTableRow[resourceCount];
    }
  });

  score += scoreTable[`room${props.roomStyle}`][props.room];
  score += Number(props.beggingCard) * -3;
  score += Number(props.bonus) + Number(props.otherBonus);
  return score;
}

function textButton(label, text) {
  return {
    type: 'text',
    text: label,
    action: {
      type: 'message',
      text: text,
    },
    color: '#225588',
    margin: 'md',
  };
}

module.exports = function resultFlex(props) {
  const bubbleContents = [
    {
      type: 'box',
      layout: 'horizontal',
      margin: 'lg',
      contents: [
        {
          type: 'text',
          text: '以下是您所輸入的資料：',
          weight: 'bold',
          flex: 0,
        },
        textButton('全部重填', '幫我算分數'),
      ],
    },
  ];

  // 各項資源數量
  fields.forEach(field => {
    bubbleContents.push({
      type: 'box',
      layout: 'horizontal',
      margin: 'lg',
      contents: [
        {
          type: 'text',
          text: `${field.name}: ${props[field.key]}`,
          size: 'sm',
          flex: 0,
        },
        textButton('修改', field.name),
      ],
    });
  });

  bubbleContents.push({
    type: 'separator',
  });

  bubbleContents.push({
    type: 'text',
    text: `總分：${calculate(props)}`,
    size: 'xxl',
    weight: 'bold',
    margin: 'lg',
  });

  return {
    type: 'bubble',
    size: 'giga',
    body: {
      type: 'box',
      layout: 'vertical',
      contents: bubbleContents,
    },
  };
};
